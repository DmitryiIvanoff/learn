#include "stdafx.h"
#include <GL/glut.h>
#include <Windows.h>
#include <math.h>
#include <iostream>
void init();
void draw();

void main(int argc, char **argv) //Главная функция
{
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutInitWindowSize(640, 480);
	glutInitWindowPosition(50, 50);
	glutCreateWindow("Myprog");
	init();
	glutDisplayFunc(draw);
	glutMainLoop();
}

void init() //Функция инициализации
{
	glClearColor(1.0, 1.0, 0.0, 0.0);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluOrtho2D(3.0, 3.0, 3.0, 3.0);
}
void draw() //Функция рисования
{
	GLfloat l = -2, r = 100, b = -100, t = 100;
	GLint x = 0, y = 0, w = 640, h = 480;
	glClear(GL_COLOR_BUFFER_BIT);
	gluOrtho2D(l, r, b, t);
	/*for (x = 0; x <= 600; x += w)
	for (y = 0; y <= 480; y += h)
	{
		glViewport(x, y, w, h);
		glColor3f(1.0, 0.0, 0.0);
		glBegin(GL_QUADS);
		glVertex2f(0.0, 0.0); glVertex2f(0.0, 60.0);
		glVertex2f(60.0, 0.0); glVertex2f(60.0, 60.0);
		glEnd(); glFlush(); Sleep(50);
	}*/
	float womega = 0; std::cout << "w="; std::cin >> womega;
	glViewport(x, y, w, h);
	glColor3f(1.0, 0.0, 0.0);
	
	for (float i = 0; i <= 640;i+=0.05){
		float zx = i - 0.05;
		glBegin(GL_LINES);
		glVertex2f(zx, (sinf(womega*zx) / womega*zx));
		glVertex2f(i, (sinf(womega*i) / womega*i));
		glEnd(); glFlush(); Sleep(5);
	}
}
